plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.sangbu3jo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Swagger 활용하기 위한 springdoc-openapi 라이브러리
    //implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation 'org.json:json:20230227'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.28'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    // QueryDSL
    // QueryDSL JPA 라이브러리를 프로젝트에 추가합니다. 이 라이브러리는 JPA 엔터티와 관련된 동적 쿼리를 생성하는 데 사용
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // QueryDSL APT(Annotation Processing Tool): QueryDSL이 JPA 엔터티를 기반으로 동적 쿼리 클래스를 생성할 때 필요한 프로세스
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    // Jakarta EE 애노테이션 API: Jakarta EE 애노테이션을 사용하여 JPA 엔터티를 정의할 때 필요한 라이브러리입니다.
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    // Jakarta EE Persistence API: 이 라이브러리는 Jakarta EE와 관련된 JPA 엔터티를 정의할 때 필요한 라이브러리입니다.
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // WebSocket 의존성
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
//    implementation 'org.webjars:sockjs-client:1.5.1'
//    implementation 'org.webjars:stomp-websocket:2.3.4'
//    implementation 'org.springframework:spring-messaging:6.0.3'
//    implementation 'org.springframework.security:spring-security-messaging:6.0.2'

    // MongoDB 의존성
    'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
